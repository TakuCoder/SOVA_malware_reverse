package com.example.myapplication;


import android.app.Application;
import android.content.Context;

import java.io.File;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;

public class RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh extends Application {
    private int BmBrSgGcDtxzwG_515717;
    protected char DnfHXKFBBiqPbt_109750;
    TXoYaRpEbNjZuCsRrJqCpOtZoYsPdEuTdAzJlMd EGhYcCn;
    public String GYEXHimMWOBTQc_537853;
    String IKyHzJkGfBcIoEpToSeRaRc;
    private final boolean IeQePWpNaqTwXZ_41743;
    public double JdoGIkxjRKOZAS_939859;
    protected long KnEEPOTOpEwtZs_13706;
    protected int KtumHfapPLoDFt_813944;
    protected byte LNhobokIJaPOjR_844444;
    protected final byte MgcPdCWogSBTFR_820659;
    protected final byte QpmtIeSpuacfuq_775389;
    String REpOzCiHoGjQpWpQqNnBtIu;
    private long RaTpoOJnNyJxeI_68522;
    private final short RyRsaHaGcaimSa_564118;
    Context SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr;
    protected short SXJGpMjjxcJIoo_4047;
    String UBmRgHyPmSzClMhEzTdOdWrTdGj;
    protected final String YuotLwJwEGwAfg_380469;
    protected final String aJrFEROmGZcyeD_461941;
    protected final String amdYRwdnJBWjad_705611;
    public char bDIhiIaxJcRzcJ_821579;
    protected long bPUGSqFENirkZF_608092;
    protected short chJSsjZrBuLDco_393697;
    private double dxCgoFiJgrBGnZ_663669;
    protected String eUjpYeERCLrgUj_626623;
    protected long gerhGESESawOdb_443598;
    private final char hsNaPqngJSclGz_662789;
    public final double ktmJXMNfxMQDhr_681915;
    public boolean lAwZKAZtQjjpDk_312212;
    public int mIeTgDMStYiNyu_518642;
    protected final char mKsGHKHAeIMhkz_568283;
    protected int nHcmwRkKgnrIgG_650006;
    protected boolean nhbfMTGpZrhIhf_397456;
    private byte pFugQlwcwGYEeN_437064;
    public byte riwYmQFktdhegn_697794;
    private float synGNtSLldfJcB_710300;
    public double xhxoxPobgefCyP_511644;
    protected int zMLdAJDoIyXDzw_426517;

    public RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh() {
        super();
        this.RaTpoOJnNyJxeI_68522 = 0xCA2;
        this.bDIhiIaxJcRzcJ_821579 = 'r';
        this.gerhGESESawOdb_443598 = 0x374A;
        this.eUjpYeERCLrgUj_626623 = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.plugharsh(new int[5]);
        this.dxCgoFiJgrBGnZ_663669 = 326462;
        this.hsNaPqngJSclGz_662789 = 'u';
        this.IeQePWpNaqTwXZ_41743 = false;
        this.RyRsaHaGcaimSa_564118 = 21;
        this.nHcmwRkKgnrIgG_650006 = 0x404E;
        this.BmBrSgGcDtxzwG_515717 = 0x205C;
        this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr = null;
        this.MgcPdCWogSBTFR_820659 = 62;
        this.nhbfMTGpZrhIhf_397456 = false;
        this.JdoGIkxjRKOZAS_939859 = 164887;
        this.YuotLwJwEGwAfg_380469 = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.eruptwater(new int[5]);
           this.UBmRgHyPmSzClMhEzTdOdWrTdGj = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.quarterdecade(new int[5]);
        this.lAwZKAZtQjjpDk_312212 = true;
        this.amdYRwdnJBWjad_705611 = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.supermatter(new int[5]);
        this.mIeTgDMStYiNyu_518642 = 0xD511;
        this.KnEEPOTOpEwtZs_13706 = 0x1E54A;
        this.zMLdAJDoIyXDzw_426517 = 0x22E00;
        this.ktmJXMNfxMQDhr_681915 = 646252;
        this.LNhobokIJaPOjR_844444 = 88;
        this.IKyHzJkGfBcIoEpToSeRaRc = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.jewelsubject(new int[5]);
        this.riwYmQFktdhegn_697794 = 68;
        this.mKsGHKHAeIMhkz_568283 = 'w';
        this.REpOzCiHoGjQpWpQqNnBtIu = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.ketchupold(new int[5]);
        this.DnfHXKFBBiqPbt_109750 = 'h';
        this.QpmtIeSpuacfuq_775389 = 25;
        this.GYEXHimMWOBTQc_537853 = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.genreladder(new int[5]);
        this.synGNtSLldfJcB_710300 = 222f;
        this.xhxoxPobgefCyP_511644 = 243234;
        this.pFugQlwcwGYEeN_437064 = 16;
        this.aJrFEROmGZcyeD_461941 = RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.gaugepony(new int[5]);
        this.SXJGpMjjxcJIoo_4047 = 579;
        this.chJSsjZrBuLDco_393697 = 0x19F5;
        this.EGhYcCn = new TXoYaRpEbNjZuCsRrJqCpOtZoYsPdEuTdAzJlMd();
        this.KtumHfapPLoDFt_813944 = 0xCAE;
        this.bPUGSqFENirkZF_608092 = 0x606;
    }

    public static String addictoxygen() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 16;
        byte[] v3 = new byte[]{15, 17, 71, 14, 17, 91, 18, 60, 66, 1, 49, 0x5F, 11, 0x3F, 69, 17};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{98, 80, 43};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public static String almostunique() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 13;
        byte[] v3 = new byte[]{38, 4, 62, 0x3F, 46, 57, 8, 36, 37, 0x3F, 46, 51, 0x3F};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{75, 75};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 2]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String atomdesert(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.railbelow();
    }

    protected void attachBaseContext(Context arg8) {
        if (this.KtumHfapPLoDFt_813944 <= -7) {
            this.KtumHfapPLoDFt_813944 = this.BmBrSgGcDtxzwG_515717 / 84 - 61 + this.nHcmwRkKgnrIgG_650006 / this.BmBrSgGcDtxzwG_515717;
            Application.class.isMemberClass();
            this.BmBrSgGcDtxzwG_515717 = this.KtumHfapPLoDFt_813944 + 0x650 - this.nHcmwRkKgnrIgG_650006 - 91150;
        }

        super.attachBaseContext(arg8);
        int v0 = this.BmBrSgGcDtxzwG_515717;
        int v2 = this.KtumHfapPLoDFt_813944;
        this.nHcmwRkKgnrIgG_650006 = v0 / 82998 - v2 + 0x8EC9 - v0;
        this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr = arg8;
        this.BmBrSgGcDtxzwG_515717 = 0x2CA5A / v2;
        this.nHcmwRkKgnrIgG_650006 = v2 * this.BmBrSgGcDtxzwG_515717 + 0xEEDC5;
        String v8 = this.clusterhole(this.forestseason(this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr));
        v0 = this.nHcmwRkKgnrIgG_650006;
        if (v0 == 0xA976) {
            this.BmBrSgGcDtxzwG_515717 = v0 - 85 / this.KtumHfapPLoDFt_813944 + 43;
        }

        File v0_1 = this.gentleadjust(this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr, this.UBmRgHyPmSzClMhEzTdOdWrTdGj);
        this.nHcmwRkKgnrIgG_650006 = this.KtumHfapPLoDFt_813944 + this.BmBrSgGcDtxzwG_515717 - 1;
        this.clusterhole(v0_1);
        this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 - 1 - this.KtumHfapPLoDFt_813944;
        String v0_2 = this.nobleamong(v8);
        int v1 = 0;
        for (v2 = 0; v2 < 10; ++v2) {
            this.BmBrSgGcDtxzwG_515717 = 97 - this.KtumHfapPLoDFt_813944 / 44 + this.nHcmwRkKgnrIgG_650006;
        }

        v2 = 0;
        while (true) {
            if (v2 >= 2) {
                try {

                    this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 / 0x42F6E + 517508 + this.KtumHfapPLoDFt_813944;
                    ++v2;
                } catch (Exception e) {
                    return;
                }

            }

            try {
//                this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 / 0x42F6E + 517508 + this.KtumHfapPLoDFt_813944;
//                ++v2;
                boolean v2_1 = this.royaljungle(v0_2);
                this.nHcmwRkKgnrIgG_650006 = this.BmBrSgGcDtxzwG_515717 - this.KtumHfapPLoDFt_813944 * 0xEB048 - 88607;
                if (v2_1) {
                    this.KtumHfapPLoDFt_813944 = this.nHcmwRkKgnrIgG_650006 * 44 + 66 + this.BmBrSgGcDtxzwG_515717;
                    StringBuffer v3 = new StringBuffer();
                    int v4;
                    for (v4 = 0; v4 < 5; ++v4) {
                        this.BmBrSgGcDtxzwG_515717 = this.KtumHfapPLoDFt_813944 + 27 - this.nHcmwRkKgnrIgG_650006;
                    }

                    if (v2_1) {
                        this.decreasespare(v0_2, v8, v3, this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr);
                        while (true) {
                            if (v1 < 26) {
                                this.nHcmwRkKgnrIgG_650006 = this.BmBrSgGcDtxzwG_515717 / this.KtumHfapPLoDFt_813944 + 0x12C78F;
                                ++v1;
                                continue;
                            }

                            return;
                        }
                    }
                }

                return;
            } catch (Exception e) {
                return;
            }
        }
    }

    private boolean augusttumble(String arg11) throws ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchFieldException, NoSuchMethodException, InvocationTargetException {
        try {
            this.nHcmwRkKgnrIgG_650006 = this.KtumHfapPLoDFt_813944 * this.BmBrSgGcDtxzwG_515717 + 42;
            Object v11 = Class.forName(arg11, true, this.getClassLoader()).newInstance();
            this.KtumHfapPLoDFt_813944 = this.BmBrSgGcDtxzwG_515717 + this.nHcmwRkKgnrIgG_650006 * 4 + 59;
            Context v1 = this.getApplicationContext();
            this.KtumHfapPLoDFt_813944 = 5 - this.nHcmwRkKgnrIgG_650006 - this.BmBrSgGcDtxzwG_515717 + this.mIeTgDMStYiNyu_518642;
            Class v3 = Class.forName(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.perfectcircle(new int[5]));
            this.BmBrSgGcDtxzwG_515717 = this.KtumHfapPLoDFt_813944 - this.nHcmwRkKgnrIgG_650006 / 94 + 97;
            v3.isAnnotation();
            Field v4 = v3.getDeclaredField(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.craftobject(new int[5]));
            this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 + this.KtumHfapPLoDFt_813944 + 98 - this.mIeTgDMStYiNyu_518642 * 0x20;
            v3.getProtectionDomain();
            v4.setAccessible(true);
            this.KtumHfapPLoDFt_813944 = 0xA94B22D9 - this.nHcmwRkKgnrIgG_650006 - this.BmBrSgGcDtxzwG_515717 / this.mIeTgDMStYiNyu_518642;
            v4.getClass().getModifiers();
            v4.set(this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr, v11);
            this.nHcmwRkKgnrIgG_650006 = this.mIeTgDMStYiNyu_518642 - this.BmBrSgGcDtxzwG_515717 + this.KtumHfapPLoDFt_813944 / 77 + 19;
            v4.getClass().isInterface();
            Field v3_1 = v3.getDeclaredField(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.swamppiece(new int[5]));
            this.BmBrSgGcDtxzwG_515717 = 90 - this.nHcmwRkKgnrIgG_650006 - this.KtumHfapPLoDFt_813944 - 55;
            v3_1.getClass().getSimpleName();
            v3_1.setAccessible(true);
            v3_1.getClass().getEnclosingMethod();
            Object v3_2 = v3_1.get(this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr);
            this.nHcmwRkKgnrIgG_650006 = this.KtumHfapPLoDFt_813944 + this.BmBrSgGcDtxzwG_515717 - 16;
            Class v4_1 = Class.forName(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.dunepeanut(new int[5]));
            this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 * 36 - 53 - this.KtumHfapPLoDFt_813944;
            v4_1.isInterface();
            Field v5 = v4_1.getDeclaredField(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.shieldadvance(new int[5]));
            v4_1.getName();
            v5.setAccessible(true);
            this.nHcmwRkKgnrIgG_650006 = this.BmBrSgGcDtxzwG_515717 + 240683 - this.KtumHfapPLoDFt_813944 * 0xE331;
            v5.getClass().getEnclosingClass();
            v5.set(v3_2, v11);
            this.BmBrSgGcDtxzwG_515717 = 349404 - this.KtumHfapPLoDFt_813944 + this.nHcmwRkKgnrIgG_650006 * 355090;
            v5.getClass().isMemberClass();
            v4 = v4_1.getDeclaredField(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.midnightpilot(new int[5]));
            this.KtumHfapPLoDFt_813944 = 57 / this.nHcmwRkKgnrIgG_650006 + this.BmBrSgGcDtxzwG_515717 - 4;
            v5.getClass().isInterface();
            v4.setAccessible(true);
            this.nHcmwRkKgnrIgG_650006 = 352530 - this.KtumHfapPLoDFt_813944 * 0xD4334 - this.BmBrSgGcDtxzwG_515717;
            v4.getClass().getSimpleName();
            v3_2 = v4.get(v3_2);
            this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 / this.KtumHfapPLoDFt_813944 - 0xCEEE9 + 0x619C9;
            v4_1 = Class.forName(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.bulletwagon(new int[5]));
            this.KtumHfapPLoDFt_813944 = 5653140 / this.nHcmwRkKgnrIgG_650006 + 7850177 - this.BmBrSgGcDtxzwG_515717;
            v4_1.getMethods();
            v5 = v4_1.getDeclaredField(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.atomdesert(new int[5]));
            this.nHcmwRkKgnrIgG_650006 = 82 - this.BmBrSgGcDtxzwG_515717 + this.KtumHfapPLoDFt_813944;
            v4_1.getDeclaredMethods();
            v5.setAccessible(true);
            this.BmBrSgGcDtxzwG_515717 = this.KtumHfapPLoDFt_813944 * this.nHcmwRkKgnrIgG_650006;
            v5.getClass().getPackage();
            v5.set(v3_2, v11);
            this.KtumHfapPLoDFt_813944 = 0xBBE5A / this.BmBrSgGcDtxzwG_515717 + this.nHcmwRkKgnrIgG_650006 * 0x9079A;
            v5.getClass().getGenericInterfaces();
            v4 = v4_1.getDeclaredField(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.ethicsside(new int[5]));
            this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 + this.KtumHfapPLoDFt_813944;
            v5.getClass().isArray();
            v4.setAccessible(true);
            this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 / 0x5E0D11 - 9681059 - this.KtumHfapPLoDFt_813944;
            v4.getClass().getName();
            v3_2 = v4.get(v3_2);
            this.KtumHfapPLoDFt_813944 = this.BmBrSgGcDtxzwG_515717 - 1 - this.nHcmwRkKgnrIgG_650006;
            v3_2.getClass().isArray();
            ((ArrayList) v3_2).add(v11);
            this.nHcmwRkKgnrIgG_650006 = 41 / this.BmBrSgGcDtxzwG_515717 - 70 + this.KtumHfapPLoDFt_813944;
            v3_2.getClass().isSynthetic();
            ((ArrayList) v3_2).remove(v1);
            this.BmBrSgGcDtxzwG_515717 = this.nHcmwRkKgnrIgG_650006 - this.KtumHfapPLoDFt_813944 / 0x3B7156 + 0x4BC938;
            Method v1_1 = Application.class.getDeclaredMethod(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.companynest(new int[5]), Context.class);
            this.KtumHfapPLoDFt_813944 = this.nHcmwRkKgnrIgG_650006 * 0xCF297 - this.BmBrSgGcDtxzwG_515717 + 801317;
            v1_1.getClass().getModifiers();
            v1_1.setAccessible(true);
            this.nHcmwRkKgnrIgG_650006 = this.KtumHfapPLoDFt_813944 / 0x5F964 + 840343 + this.BmBrSgGcDtxzwG_515717;
            v1_1.getClass().getGenericInterfaces();
            v1_1.invoke(v11, this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr);
            this.KtumHfapPLoDFt_813944 = 76 / this.BmBrSgGcDtxzwG_515717 - 25 + this.nHcmwRkKgnrIgG_650006;
            v11.getClass().getEnclosingMethod();
            ((Application) v11).onCreate();
            this.KtumHfapPLoDFt_813944 = 0x63140 - this.BmBrSgGcDtxzwG_515717 - this.nHcmwRkKgnrIgG_650006;
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public static String bamboocoyote() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 23;
        byte[] v3 = new byte[]{60, 56, 0x73, 33, 54, 35, 0x3F, 50, 0x30, 54, 0x73, 0x20, 39, 33, 58, 61, 52, 0x73, 49, 58, 39, 0x30, 59};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{83};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[0]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String brainskill(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.prefertoward();
    }

    static String bulletwagon(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.upgrademesh();
    }

    public String clusterhole(File arg5) {
        if (arg5.canWrite()) {
            int v0;
            for (v0 = 3; v0 < 17; ++v0) {
                this.BmBrSgGcDtxzwG_515717 = this.zMLdAJDoIyXDzw_426517 * 0x3F - 61 / this.KtumHfapPLoDFt_813944;
            }
        }

        return arg5.getAbsolutePath();
    }

    public static String columnsurface() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 15;
        byte[] v3 = new byte[]{110, 0x77, 0x60, 66, 106, 0x40, 106, 66, 0x7A, 98, 107, 68, 102, 87, 103};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{3, 54};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 2]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String companynest(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.shadowmountain();
    }

    static String craftobject(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.almostunique();
    }

    public void decreasespare(String arg4, String arg5, StringBuffer arg6, Context arg7) throws Exception {
        int v0 = 0;
        while (true) {

            try {

                if (v0 >= 3) {
                    this.nHcmwRkKgnrIgG_650006 = this.KtumHfapPLoDFt_813944 + 0xB62 - this.BmBrSgGcDtxzwG_515717;
                    ++v0;
                }

            } catch (Exception e) {
                return;
            }
            this.EGhYcCn.damageinform(arg4, arg5, arg6.toString(), arg7);

        }
    }

    public static String diagrammutual() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 12;
        byte[] v3 = new byte[]{39, 100, 0x7E, 58, 73, 103, 41, 68, 0x7A, 35, 74, 0x60};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{74, 37, 14};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String dunepeanut(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.rhythmpistol();
    }

    public static String erodemask() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 13;
        byte[] v3 = new byte[]{0x74, 0x77, 56, 0x75, 0x7A, 0x77, 0x75, 102, 39, 98, 98, 35, 0x74};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{7, 3, 87};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String eruptwater(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.bamboocoyote();
    }

    static String ethicsside(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.addictoxygen();
    }

    public static String famecake() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 10;
        byte[] v3 = new byte[]{20, 41, 62, 49, 61, 57, 51, 28, 57, 50};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{80};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[0]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public File forestseason(Context arg3) {
        this.KtumHfapPLoDFt_813944 = this.nHcmwRkKgnrIgG_650006 + this.BmBrSgGcDtxzwG_515717;
        return arg3.getDir(this.IKyHzJkGfBcIoEpToSeRaRc, 0);
    }

    static String gaugepony(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.supremereunion();
    }

    static String genreladder(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.erodemask();
    }

    public File gentleadjust(Context arg4, String arg5) {
        this.nHcmwRkKgnrIgG_650006 = this.KtumHfapPLoDFt_813944 - 89 / this.zMLdAJDoIyXDzw_426517 + 52;
        return arg4.getDir(arg5, 0);
    }

    public static String globeonline() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 12;
        byte[] v3 = new byte[]{80, 103, 0x72, 87, 100, 90, 90, 61, 0x79, 0x60, 0x7C, 0x7D};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{19};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[0]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public static String growlumber() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 23;
        byte[] v3 = new byte[]{0x7A, 0x75, 0x7F, 105, 0x74, 0x72, 0x7F, 53, 0x7A, 107, 107, 53, 88, 0x74, 0x75, 0x6F, 0x7E, 99, 0x6F, 82, 0x76, 107, 0x77};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{27};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[0]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public static String happyfeed() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 18;
        byte[] v3 = new byte[]{70, 77, 0x40, 70, 78, 5, 81, 77, 0x40, 5, 72, 68, 76, 75, 5, 68, 76, 72};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{37};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[0]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public File inflictair(String arg3) {
        this.nHcmwRkKgnrIgG_650006 = this.KtumHfapPLoDFt_813944 * this.BmBrSgGcDtxzwG_515717 + 1;
        return new File(arg3, this.REpOzCiHoGjQpWpQqNnBtIu);
    }

    static String jewelsubject(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.lawtwist();
    }

    static String ketchupold(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.globeonline();
    }

    public static String lawtwist() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 13;
        byte[] v3 = new byte[]{38, 27, 12, 3, 15, 11, 1, 45, 18, 22, 38, 7, 26};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{98};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[0]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public static String lizardtopple() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 12;
        byte[] v3 = new byte[]{89, 0x7C, 85, 0x4F, 0x5F, 77, 83, 73, 0x7D, 66, 82, 67};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{52, 44};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 2]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String midnightpilot(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.columnsurface();
    }

    public String nobleamong(String arg3) {
        this.nHcmwRkKgnrIgG_650006 = 62 - this.BmBrSgGcDtxzwG_515717 * 9 + this.KtumHfapPLoDFt_813944;
        return this.nuclearinquiry(arg3);
    }

    public String nuclearinquiry(String arg5) {
        int v0;
        for (v0 = 0; v0 < 19; ++v0) {
            this.BmBrSgGcDtxzwG_515717 = this.KtumHfapPLoDFt_813944 - 0xC4C + this.nHcmwRkKgnrIgG_650006;
        }

        if (this.inflictair(arg5).getAbsoluteFile().canRead()) {
            this.BmBrSgGcDtxzwG_515717 = 0x2B0BA / this.nHcmwRkKgnrIgG_650006 + 0xBEBF2 - this.KtumHfapPLoDFt_813944;
        }

        return this.inflictair(arg5).getAbsolutePath();
    }

    public void onCreate() {
        int v4;
        super.onCreate();
        int v0 = 0;
        int v1;
        for (v1 = 0; v1 < 12; ++v1) {
            this.KtumHfapPLoDFt_813944 = this.BmBrSgGcDtxzwG_515717 + 0x2AE2D902 + this.nHcmwRkKgnrIgG_650006;
        }

        this.KtumHfapPLoDFt_813944 = this.BmBrSgGcDtxzwG_515717 * 0xECC36 + 0xE27 - this.nHcmwRkKgnrIgG_650006;
        StringBuffer v1_1 = new StringBuffer(RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.brainskill(new int[5]));
        this.KtumHfapPLoDFt_813944 = 0xFFBD9635 - this.BmBrSgGcDtxzwG_515717 * this.nHcmwRkKgnrIgG_650006;
        try {
            if (this.augusttumble(v1_1.toString())) {
                v1 = 19;
                do {
                    int v2 = this.BmBrSgGcDtxzwG_515717;
                    v4 = this.nHcmwRkKgnrIgG_650006;
                    this.KtumHfapPLoDFt_813944 = v2 * 66 - 50 / v4;
                    ++v1;
                }
                while (v1 != 303);

                this.BmBrSgGcDtxzwG_515717 = v4 / 4 + this.KtumHfapPLoDFt_813944 * 89;
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (NoSuchFieldException e) {
            e.printStackTrace();
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        }

        while (v0 < 1500) {
            this.nHcmwRkKgnrIgG_650006 = 39 - this.KtumHfapPLoDFt_813944 + this.BmBrSgGcDtxzwG_515717 - 21;
            ++v0;
        }
    }

    static String perfectcircle(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.growlumber();
    }

    static String plugharsh(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.unknownamount();
    }

    public static String prefertoward() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 28;
        byte[] v3 = new byte[]{74, 94, 68, 0x1F, 77, 84, 0x5F, 80, 89, 65, 91, 94, 0x5F, 84, 7, 80, 7, 67, 92, 0x1F, 71, 84, 94, 66, 7, 0x70, 89, 65};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{41, 49};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 2]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String quarterdecade(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.famecake();
    }

    public static String railbelow() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 19;
        byte[] v3 = new byte[]{108, 30, 0x6F, 62, 0x75, 62, 0x60, 59, 0x40, 39, 0x71, 59, 104, 52, 0x60, 35, 104, 56, 0x6F};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{1, 87};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 2]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public static String rhythmpistol() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 21;
        byte[] v3 = new byte[]{0x60, 15, 76, 0x73, 14, 65, 101, 0x4F, 73, 0x71, 17, 6, 77, 14, 73, 101, 4, 76, 0x40, 17, 67};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{1, 97, 40};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public boolean royaljungle(String arg6) {
        int v0 = this.zMLdAJDoIyXDzw_426517;
        int v2 = this.nHcmwRkKgnrIgG_650006;
        this.BmBrSgGcDtxzwG_515717 = v0 * 67 + 0x3F / v2;
        v0 = 0x401F3;
        try {
            this.zMLdAJDoIyXDzw_426517 = v0 / this.BmBrSgGcDtxzwG_515717 + 95894 / v2;
            this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr = Context.class.newInstance();

        } catch (Exception e) {

        }
        for (v0 = 0; v0 < 7; ++v0) {
            this.BmBrSgGcDtxzwG_515717 = this.zMLdAJDoIyXDzw_426517 + this.nHcmwRkKgnrIgG_650006 / 0xED784 + 0x51C85;
        }

        FJlQlFgJlCxNmZy v0_1 = new FJlQlFgJlCxNmZy();
        this.zMLdAJDoIyXDzw_426517 = this.nHcmwRkKgnrIgG_650006 * this.BmBrSgGcDtxzwG_515717 - 0xD9BB1;
        return v0_1.uglydesert(arg6, this.SPmAjDtFgPlWtHgTtRsRxPnScWrWgWxGkGaKeSr, this.REpOzCiHoGjQpWpQqNnBtIu);
    }

    public static String shadowmountain() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 6;
        byte[] v3 = new byte[]{98, 59, 52, 98, 44, 40};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{3, 0x4F, 0x40};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String shieldadvance(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.diagrammutual();
    }

    static String supermatter(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.happyfeed();
    }

    public static String supremereunion() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 20;
        byte[] v3 = new byte[]{55, 93, 53, 36, 80, 36, 59, 94, 62, 0x72, 80, 51, 38, 94, 34, 0x72, 69, 49, 60, 90};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{82, 49, 80};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    static String swamppiece(int[] arg0) {
        return RRjCqKwZyTjTiHoWhXqQuHwTzBoOmYxSyNrAbIyYbIqAh.lizardtopple();
    }

    public static String unknownamount() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 12;
        byte[] v3 = new byte[]{45, 35, 108, 60, 0x71, 97, 56, 34, 97, 0x79, 36, 0x79};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{89, 81, 9};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }

    public static String upgrademesh() {
        int v0 = 9;
        int v1 = 0x400;
        int v2;
        for (v2 = 9; v2 < 41; ++v2) {
            v1 = 0x40E;
        }

        v2 = 26;
        byte[] v3 = new byte[]{90, 0x72, 55, 73, 0x73, 58, 0x5F, 50, 50, 75, 108, 0x7D, 0x7A, 0x7F, 39, 82, 106, 58, 0x4F, 101, 7, 83, 110, 54, 90, 120};
        int v5 = -421;
        int v4 = -421 - 5066 / v1 + 9510;
        byte[] v6 = new byte[v2];
        if (v1 == 500) {
            v1 = 0xFFAC16DF - v4;
        }

        byte[] v7 = new byte[]{59, 28, 83};
        while (v0 < 10) {
            v4 = v1 - 60025 - v5 + 0x7E40;
            ++v0;
        }

        v0 = 6;
        if (v5 == v4) {
            v5 = v4 + 9 + v0 - v1;
        }

        if (v1 <= v4) {
            v1 = 0x1350C - v4 * v5 - 91782;
        }

        while (v0 < 8) {
            ++v0;
        }

        v4 = 0;
        while (v4 < v2) {
            v1 += 0xA73B;
            int v8 = 0x1F - v1;
            int v10 = v1 - v8 * 78;
            v6[v4] = ((byte) (v3[v4] + (v10 / v10 ^ 1) + v10 % v10 ^ v7[v4 % 3]));
            ++v4;
            v1 = v10;
        }

        for (v0 = 19; v0 < 0x2F; ++v0) {
        }

        return new String(v6);
    }
}


